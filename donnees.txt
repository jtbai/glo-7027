

Presentation du jeu de donnees
Le jeu de donnees offert pour la competition est une liste de maisons avec leur attributts. Le jeu de donnn√©es est divise en deux ensembles, soit l'ensemble d'entrainement et l'ensemblae de validation.
Les deux ensembles contiennent 1460 point donnees et contienent 79 variables explicatives. Le jeu d'entraimnement a une variable supplementaire, soit le prix de vente, qui est incidemment la variable a predire.

Problemes et Pretraitement des donnnes (/2)


Fleau de la dimentionnalite

une tres grande partie des variables explicatives (x / 79) sont des variables categorielles qui copmrennent entre 4 et 12 categories. Il est important de transformer ces variables afin qu'elles puissent etre utilisees dans les modeles.

Les variables X et Y sont des variables numeriques ordinales et peuvent etre utilisses telle quel.

Le jeu de donnee comprends aussi une variable numerique categorielle. Il s'agit de W et devra etre convertie en facteur afin d'etre utilisee.

Les donnees restantes sont numeriques, autant continue que discrete et nous pensons a priori les utiliser telles quel.

LEs donnees categorielles seront transformer avec la dichotomisation et creeront une tres grande quantite de dimentionss. nous estimons que si aucun traitement n'est fait qu'il y aura 140 variables explicatives pour 1460 point de donnees d'entrainmenet. Selon
le theorem de chose, il dit que pour avoir une couverture adequate, plus de 1e6 points seront utiles. Il sera donc imperatifs de reduire la dimentionnalite du jeu d'entraimenement.

Nous pensons proceder de deux facon, soit par l'utilisation des composantes principales ou de l'analyse factorielle.
nous tentrons initialement de reduire la dimentionnalite pour chacune des "sections" (sous-sol, garage, etc). Ensuite, chaque variable categorielle passera au PCA / FA.


Le jeu de donnee manquantes

En utilisant R pour importer les donnees, il semble qu'il manque beaucoup de variables dans le jeu de donnees. En effet, les champs BsmtCond, dsfsdf, etc manquent un nombre non negligeable de donnees et il serait important de bien comprendre la nature de ces manquements.

En regardant de plus pret, il est possible de voir que la plupart des NA sont du au fait que NA est une valeur possible dans le jeu de donnees et qu'elle a une signification propres (par exemple NA dans le champs Pool signifie qu'il n'y a pas de piscine.)
une analyse des donnees manquantes pour ces champs est proposee par un memnbre d'un Kernel et est tres pertinente. Bien que NA aie une valeur intrinseque aux donnes, certaines donnees sont reelement manquantes et devront etre imputees. Cependant, comme il s'agit d'un nombre tres petit de donnees ( inferieu a 1%)
nous utiliserons une methode simple (i.e. Hot deck).

Cependant, 3 variables semblent avoir des NA qui sont reelement des donnees manquantes. LotFacade, MsType et ...
Les deux premiere variables manquantes, Ms Type et chose, il n'en manque que 8 et une technique simple pourrait etre utilisee sans trop debalancer le jeu de donees.
Pour LotFacade, il manque environ 18% du jeu de donnees. Deux choix s'offrent a nous. l'alternative est d'exclure cette variable explicative ou d'utiliser une methode d'immputation qui conservera les proprietes statistisque de cette variable et son lien de correlation avec les autres variables.
dans le cas ou nous conserverions la variable, nous ferions l'hypothese que les donnees sont manquante aleatoirement et utiliserons la methode d'imputation par regression stochastique pour combler ces valeur.

Class imbalance:

Noise:

Donnees aditionnelles / Feature engineering

Comment les jeux de donees vont etre connectes

Structure et stockage en memoire
Les donnees de cette competition sont fournies sous format CSV. les donnees seront importees avec la framework Pandas de python.


checker les kernels


Procedure de test (/2)

Le jeu de donnes est divise en deux parties, soit un data set d'entrainement comprenant 1460 points de donnees avec leur prix de vente respectif a predire et un ensemble de "test" pour lequel
la bonne reponse n'est pas donnee. Afin de detecter les force et faiblesses de notre methodologie,  nous ne pouvons qu'utiliser l'ensemble d'entrainement. En effet, comme la variable a predire est manquante dans
le jeu de test, il n'est pas possible de savoir si notre algoritme est sur la bonne piste et pour quels type de maisons ce dernier performe mieux et moins bien.

Afin de valider notre algorithme, nous seletionnerons un sous ensemble du jeu d'entrainement et de l'utilise pour entrainer un modele. Ce modele servira a predire la valeur du sous ensemble non utiilse.
Cette methodologie s'appelle la validation croisee. Comme l'effor machine pour calculer une projection n'est pas grand et que la quantite de points n'est pas grande, nous utiliserons la methodologie LEave one out pour tester chacun des points du modele.

la valeur obtenue avec la projection sera comapree a la valeur reelle du prix de vente de la maison. Les difference entre les 1460 projections et leur valeur associes sera ensuite mise en ordre decroissant afin d'inspecter les pire cas.
Une analyse de regroupement sera faite afin de mieux voir les pattrons d'erreur.




Comment on debogue notre algo ?


Retour sur le premier rapport

quelle sont les avenues les plus prometteuses (/2)

perspective globale et planification (/1)


